{"ast":null,"code":"import axios from \"axios\";\nimport Config from '../config/Config';\nconst ApiRequest = {\n  Session: {\n    Login: params => {\n      return async dispatch => {\n        let res = null;\n\n        try {\n          res = await axios.post(`${Config.ApiRequest.request.baseURL + Config.ApiRequest.urls.LOGIN}`, params, {\n            headers: Config.ApiRequest.request.headers\n          });\n          dispatch({\n            type: Config.ApiRequest.actionsTypes.LOGIN,\n            data: {\n              token: res.data.token\n            }\n          });\n          console.log(res);\n        } catch (e) {\n          console.log(e);\n        } finally {\n          console.log(res);\n        }\n      };\n    }\n  },\n  Peine: {\n    Main: () => {\n      return async dispatch => {\n        const params = new URLSearchParams();\n        params.append(\"token\", \"74698f97674df362f772ebf1339fca75\");\n        params.append(\"device\", \"Web\");\n        let res = null;\n\n        try {\n          res = await axios.post(`${Config.ApiRequest.request.baseURL + Config.ApiRequest.urls.MAIN}`, params, {\n            headers: Config.ApiRequest.request.headers\n          });\n          dispatch({\n            type: Config.ApiRequest.actionsTypes.INIT_MAIN,\n            data: {\n              user: {\n                name: res.data.user.name,\n                avatar: res.data.user.avatar,\n                favs: res.data.user.favs\n              },\n              contents: res.data.contents\n            }\n          });\n        } catch (e) {//console.log(e);\n        } finally {\n          return res.data.user;\n        }\n      };\n    },\n    Player: async params => {}\n  }\n};\nexport default ApiRequest;","map":{"version":3,"sources":["/Users/sergiogimenez/Documents/prueba/perseo-tv/src/services/api/Api-request.jsx"],"names":["axios","Config","ApiRequest","Session","Login","params","dispatch","res","post","request","baseURL","urls","LOGIN","headers","type","actionsTypes","data","token","console","log","e","Peine","Main","URLSearchParams","append","MAIN","INIT_MAIN","user","name","avatar","favs","contents","Player"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAGC,MAAD,IAAY;AACjB,aAAO,MAAOC,QAAP,IAAoB;AAC3B,YAAIC,GAAG,GAAG,IAAV;;AACA,YAAI;AACFA,UAAAA,GAAG,GAAG,MAAMP,KAAK,CAACQ,IAAN,CAAY,GAAEP,MAAM,CAACC,UAAP,CAAkBO,OAAlB,CAA0BC,OAA1B,GAAoCT,MAAM,CAACC,UAAP,CAAkBS,IAAlB,CAAuBC,KAAM,EAA/E,EAAkFP,MAAlF,EAA0F;AACpGQ,YAAAA,OAAO,EAAEZ,MAAM,CAACC,UAAP,CAAkBO,OAAlB,CAA0BI;AADiE,WAA1F,CAAZ;AAGAP,UAAAA,QAAQ,CAAC;AACPQ,YAAAA,IAAI,EAAEb,MAAM,CAACC,UAAP,CAAkBa,YAAlB,CAA+BH,KAD9B;AAEPI,YAAAA,IAAI,EAAE;AACJC,cAAAA,KAAK,EAAEV,GAAG,CAACS,IAAJ,CAASC;AADZ;AAFC,WAAD,CAAR;AAMAC,UAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAZ;AACD,SAXD,CAWE,OAAOa,CAAP,EAAU;AACVF,UAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACD,SAbD,SAaU;AACRF,UAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAZ;AACD;AACF,OAlBC;AAmBD;AArBM,GADQ;AAwBjBc,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,MAAM;AACV,aAAO,MAAOhB,QAAP,IAAoB;AACzB,cAAMD,MAAM,GAAG,IAAIkB,eAAJ,EAAf;AACAlB,QAAAA,MAAM,CAACmB,MAAP,CAAc,OAAd,EAAuB,kCAAvB;AACAnB,QAAAA,MAAM,CAACmB,MAAP,CAAc,QAAd,EAAwB,KAAxB;AACA,YAAIjB,GAAG,GAAG,IAAV;;AACA,YAAI;AACFA,UAAAA,GAAG,GAAG,MAAMP,KAAK,CAACQ,IAAN,CAAY,GAAEP,MAAM,CAACC,UAAP,CAAkBO,OAAlB,CAA0BC,OAA1B,GAAoCT,MAAM,CAACC,UAAP,CAAkBS,IAAlB,CAAuBc,IAAK,EAA9E,EAAiFpB,MAAjF,EAAyF;AACnGQ,YAAAA,OAAO,EAAEZ,MAAM,CAACC,UAAP,CAAkBO,OAAlB,CAA0BI;AADgE,WAAzF,CAAZ;AAGAP,UAAAA,QAAQ,CAAC;AACPQ,YAAAA,IAAI,EAAEb,MAAM,CAACC,UAAP,CAAkBa,YAAlB,CAA+BW,SAD9B;AAEPV,YAAAA,IAAI,EAAE;AACJW,cAAAA,IAAI,EAAE;AACJC,gBAAAA,IAAI,EAAErB,GAAG,CAACS,IAAJ,CAASW,IAAT,CAAcC,IADhB;AAEJC,gBAAAA,MAAM,EAAEtB,GAAG,CAACS,IAAJ,CAASW,IAAT,CAAcE,MAFlB;AAGJC,gBAAAA,IAAI,EAAEvB,GAAG,CAACS,IAAJ,CAASW,IAAT,CAAcG;AAHhB,eADF;AAMJC,cAAAA,QAAQ,EAAExB,GAAG,CAACS,IAAJ,CAASe;AANf;AAFC,WAAD,CAAR;AAYD,SAhBD,CAgBE,OAAOX,CAAP,EAAU,CACV;AACD,SAlBD,SAkBU;AACR,iBAAOb,GAAG,CAACS,IAAJ,CAASW,IAAhB;AACD;AACF,OA1BD;AA2BD,KA7BI;AA8BLK,IAAAA,MAAM,EAAE,MAAO3B,MAAP,IAAkB,CAEzB;AAhCI;AAxBU,CAAnB;AA4DA,eAAeH,UAAf","sourcesContent":["import axios from \"axios\";\nimport Config from '../config/Config';\n\nconst ApiRequest = {\n  Session: {\n    Login: (params) => {\n      return async (dispatch) => {\n      let res = null;\n      try {\n        res = await axios.post(`${Config.ApiRequest.request.baseURL + Config.ApiRequest.urls.LOGIN}`, params, {\n          headers: Config.ApiRequest.request.headers\n        })\n        dispatch({\n          type: Config.ApiRequest.actionsTypes.LOGIN,\n          data: {\n            token: res.data.token\n          }\n        });\n        console.log(res);\n      } catch (e) {\n        console.log(e);\n      } finally {\n        console.log(res);\n      }\n    }\n    }\n  },\n  Peine: {\n    Main: () => {\n      return async (dispatch) => {\n        const params = new URLSearchParams();\n        params.append(\"token\", \"74698f97674df362f772ebf1339fca75\");\n        params.append(\"device\", \"Web\");\n        let res = null;\n        try {\n          res = await axios.post(`${Config.ApiRequest.request.baseURL + Config.ApiRequest.urls.MAIN}`, params, {\n            headers: Config.ApiRequest.request.headers\n          })\n          dispatch({\n            type: Config.ApiRequest.actionsTypes.INIT_MAIN,\n            data: {\n              user: {\n                name: res.data.user.name,\n                avatar: res.data.user.avatar,\n                favs: res.data.user.favs\n              },\n              contents: res.data.contents\n            }\n          });\n\n        } catch (e) {\n          //console.log(e);\n        } finally {\n          return res.data.user;\n        }\n      }\n    },\n    Player: async (params) => {\n\n    }\n  }\n}\n\nexport default ApiRequest;"]},"metadata":{},"sourceType":"module"}