{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sergiogimenez/Documents/prueba/perseo-tv/src/components/video/Video.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport ReactHlsPlayer from 'react-hls-player';\nimport { connect } from \"react-redux\";\nimport ApiRequest from '../../services/api/Api-request';\nimport Config from '../../services/config/Config';\nexport const Video = props => {\n  _s();\n\n  //let url;\n  const [url, setUrl] = useState('');\n\n  async function loadVideo() {\n    const params = new URLSearchParams();\n    params.append(\"token\", props.state.token);\n    params.append(\"device\", \"Web\");\n    params.append(\"id\", props.match.params.id);\n    let res = null;\n\n    try {\n      res = await axios.post(`${Config.ApiRequest.request.baseURL + Config.ApiRequest.urls.PLAYER}`, params, {\n        headers: Config.ApiRequest.request.headers\n      });\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setUrl(res.data.url);\n    }\n  }\n\n  useEffect(() => {\n    loadVideo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ReactHlsPlayer, {\n      url: url,\n      autoplay: false,\n      controls: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Video, \"h+YUGVX5DsH7gM5V1u06RlVk/XQ=\");\n\n_c = Video;\n\nconst mapStateToProps = state => ({\n  state: state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  player: params => {\n    ApiRequest.App.Player(params)(dispatch);\n  }\n});\n\nconst connectedVideo = connect(mapStateToProps, mapDispatchToProps)(Video);\nexport default connectedVideo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["/Users/sergiogimenez/Documents/prueba/perseo-tv/src/components/video/Video.jsx"],"names":["axios","React","useEffect","useState","ReactHlsPlayer","connect","ApiRequest","Config","Video","props","url","setUrl","loadVideo","params","URLSearchParams","append","state","token","match","id","res","post","request","baseURL","urls","PLAYER","headers","e","console","log","data","mapStateToProps","mapDispatchToProps","dispatch","player","App","Player","connectedVideo"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAO,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAC5B;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,EAAD,CAA9B;;AAEJ,iBAAeS,SAAf,GAA0B;AACtB,UAAMC,MAAM,GAAG,IAAIC,eAAJ,EAAf;AACAD,IAAAA,MAAM,CAACE,MAAP,CAAc,OAAd,EAAuBN,KAAK,CAACO,KAAN,CAAYC,KAAnC;AACAJ,IAAAA,MAAM,CAACE,MAAP,CAAc,QAAd,EAAwB,KAAxB;AACAF,IAAAA,MAAM,CAACE,MAAP,CAAc,IAAd,EAAoBN,KAAK,CAACS,KAAN,CAAYL,MAAZ,CAAmBM,EAAvC;AACA,QAAIC,GAAG,GAAG,IAAV;;AACA,QAAI;AACFA,MAAAA,GAAG,GAAG,MAAMpB,KAAK,CAACqB,IAAN,CAAY,GAAEd,MAAM,CAACD,UAAP,CAAkBgB,OAAlB,CAA0BC,OAA1B,GAAoChB,MAAM,CAACD,UAAP,CAAkBkB,IAAlB,CAAuBC,MAAO,EAAhF,EAAmFZ,MAAnF,EAA2F;AACrGa,QAAAA,OAAO,EAAEnB,MAAM,CAACD,UAAP,CAAkBgB,OAAlB,CAA0BI;AADkE,OAA3F,CAAZ;AAKD,KAND,CAME,OAAOC,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,KARD,SAQU;AAERhB,MAAAA,MAAM,CAACS,GAAG,CAACU,IAAJ,CAASpB,GAAV,CAAN;AACD;AAEJ;;AAGGR,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,2BACI,QAAC,cAAD;AACE,MAAA,GAAG,EAAEF,GADP;AAEE,MAAA,QAAQ,EAAE,KAFZ;AAGE,MAAA,QAAQ,EAAE;AAHZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAvCM;;GAAMF,K;;KAAAA,K;;AAwCb,MAAMuB,eAAe,GAAIf,KAAD,KAAY;AAAEA,EAAAA,KAAK,EAAEA;AAAT,CAAZ,CAAxB;;AAEA,MAAMgB,kBAAkB,GAAIC,QAAD,KAAe;AACtCC,EAAAA,MAAM,EAAGrB,MAAD,IAAY;AACpBP,IAAAA,UAAU,CAAC6B,GAAX,CAAeC,MAAf,CAAsBvB,MAAtB,EAA8BoB,QAA9B;AACD;AAHuC,CAAf,CAA3B;;AAMA,MAAMI,cAAc,GAAGhC,OAAO,CAC5B0B,eAD4B,EAE5BC,kBAF4B,CAAP,CAGrBxB,KAHqB,CAAvB;AAKA,eAAe6B,cAAf","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport ReactHlsPlayer from 'react-hls-player';\nimport { connect } from \"react-redux\";\nimport ApiRequest from '../../services/api/Api-request';\nimport Config from '../../services/config/Config';\nexport const Video = (props) => {\n    //let url;\n    const [url, setUrl] = useState('')\n\nasync function loadVideo(){\n    const params = new URLSearchParams();\n    params.append(\"token\", props.state.token);\n    params.append(\"device\", \"Web\");\n    params.append(\"id\", props.match.params.id);\n    let res = null;\n    try {\n      res = await axios.post(`${Config.ApiRequest.request.baseURL + Config.ApiRequest.urls.PLAYER}`, params, {\n        headers: Config.ApiRequest.request.headers\n      })\n      \n\n    } catch (e) {\n      console.log(e);\n    } finally {\n    \n      setUrl(res.data.url);\n    }\n\n}\n\n\n    useEffect(() => {\n        loadVideo()\n    }, [])\n\n    return (\n        <div>\n            <ReactHlsPlayer\n              url={url}\n              autoplay={false}\n              controls={true}\n          />\n        </div>\n    )\n}\nconst mapStateToProps = (state) => ({ state: state });\n      \nconst mapDispatchToProps = (dispatch) => ({\n    player: (params) => {\n    ApiRequest.App.Player(params)(dispatch);\n  },\n});\n\nconst connectedVideo = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Video);\n\nexport default connectedVideo;"]},"metadata":{},"sourceType":"module"}