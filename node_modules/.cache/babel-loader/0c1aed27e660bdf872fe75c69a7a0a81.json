{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sergiogimenez/Documents/prueba/perseo-tv/src/components/video/VideoCard.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Config from '../../services/config/Config';\nimport './VideoCard.css';\nexport const VideoCard = props => {\n  const secondsToHms = d => {\n    d = Number(d);\n    var h = Math.floor(d / 3600);\n    var m = Math.floor(d % 3600 / 60);\n    var s = Math.floor(d % 3600 % 60);\n    var hDisplay = h + \":\";\n    var mDisplay = m + \":\";\n    var sDisplay = s;\n    return hDisplay + mDisplay + sDisplay;\n  };\n\n  const favorite = (id, action, dispatch) => {\n    dispatch({\n      type: action,\n      data: {\n        loading: true\n      }\n    });\n  };\n\n  const setLoading = (action, dispatch) => {\n    dispatch({\n      type: action,\n      data: {\n        loading: true\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.videoData.cover,\n      alt: props.videoData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label-gray\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label-black\",\n        children: props.videoData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label-gray\",\n        children: \"Duration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label-black\",\n        children: secondsToHms(props.videoData.duration)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label-gray\",\n        children: \"Section\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label-black\",\n        children: [\" \", props.videoData.section]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `video/${props.videoData.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            alt: \"Play video\",\n            class: \"material-icons\",\n            children: \"play_circle_outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          onClick: favorite(props.videoData.id),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            alt: \"add favorite\",\n            class: \"material-icons\",\n            children: props.videoData.fav ? 'favorite' : 'favorite_border'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_c = VideoCard;\n\nconst mapStateToProps = state => ({\n  state: state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  favorite: params => {\n    ApiRequest.Session.Favorite(params)(dispatch);\n  }\n});\n\nconst connectedVideoCard = connect(mapStateToProps, mapDispatchToProps)(Login);\nexport default connectedVideoCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoCard\");","map":{"version":3,"sources":["/Users/sergiogimenez/Documents/prueba/perseo-tv/src/components/video/VideoCard.jsx"],"names":["React","Link","Config","VideoCard","props","secondsToHms","d","Number","h","Math","floor","m","s","hDisplay","mDisplay","sDisplay","favorite","id","action","dispatch","type","data","loading","setLoading","videoData","cover","title","duration","section","fav","mapStateToProps","state","mapDispatchToProps","params","ApiRequest","Session","Favorite","connectedVideoCard","connect","Login"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom';\nimport Config from '../../services/config/Config';\nimport './VideoCard.css';\n\nexport const VideoCard = (props) => {\n\n    const secondsToHms = (d) => {\n        d = Number(d);\n        var h = Math.floor(d / 3600);\n        var m = Math.floor(d % 3600 / 60);\n        var s = Math.floor(d % 3600 % 60);\n\n        var hDisplay = h + \":\";\n        var mDisplay = m + \":\";\n        var sDisplay = s;\n        return hDisplay + mDisplay + sDisplay;\n    }\n\n    const favorite = (id, action, dispatch) => {\n        dispatch({\n            type: action,\n            data: {\n              loading: true,\n            },\n          });\n    };\n\n    const setLoading = (action, dispatch) => {\n        dispatch({\n          type: action,\n          data: {\n            loading: true,\n          },\n        });\n      };\n\n    return (\n        <div className=\"card\">\n            <img src={props.videoData.cover} alt={props.videoData.title} />\n            <div className=\"card-info\">\n                <label className=\"label-gray\">Title</label>\n                <label className=\"label-black\">{props.videoData.title}</label>\n                <label className=\"label-gray\">Duration</label>\n                <label className=\"label-black\">{secondsToHms(props.videoData.duration)}</label>\n                <label className=\"label-gray\">Section</label>\n                <label className=\"label-black\"> {props.videoData.section}</label>\n                <hr />\n                <div>\n                    <Link to={`video/${props.videoData.id}`}>\n                        <i alt=\"Play video\"\n                            class=\"material-icons\">\n                            play_circle_outline\n                        </i>\n                    </Link>\n                    <Link onClick={favorite(props.videoData.id)}>\n                        <i alt=\"add favorite\"\n                            class=\"material-icons\">\n                            {props.videoData.fav ? 'favorite' : 'favorite_border'}\n                        </i>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({ state: state });\n\nconst mapDispatchToProps = (dispatch) => ({\n    favorite: (params) => {\n        ApiRequest.Session.Favorite(params)(dispatch);\n    },\n});\n\nconst connectedVideoCard = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Login);\n\nexport default connectedVideoCard;"]},"metadata":{},"sourceType":"module"}