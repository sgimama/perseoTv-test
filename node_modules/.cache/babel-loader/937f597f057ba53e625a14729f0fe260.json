{"ast":null,"code":"import axios from \"axios\";\nimport Config from '../config/Config';\nconst ApiRequest = {\n  Session: {\n    Login: params => {\n      return async dispatch => {\n        let res = null;\n\n        try {\n          res = await axios.post(`${Config.ApiRequest.request.baseURL + Config.ApiRequest.urls.LOGIN}`, params, {\n            headers: Config.ApiRequest.request.headers\n          });\n\n          if (res.data.authorized && !res.data.error) {\n            console.log('correcto');\n          }\n\n          dispatch({\n            type: Config.ApiRequest.actionsTypes.LOGIN,\n            data: {\n              token: res.data.token\n            }\n          });\n        } catch (e) {\n          console.log(e);\n        } finally {\n          console.log(res);\n        }\n      };\n    }\n  },\n  Peine: {\n    Main: () => {\n      return async dispatch => {\n        const params = new URLSearchParams();\n        params.append(\"token\", \"74698f97674df362f772ebf1339fca75\");\n        params.append(\"device\", \"Web\");\n        let res = null;\n\n        try {\n          res = await axios.post(`${Config.ApiRequest.request.baseURL + Config.ApiRequest.urls.MAIN}`, params, {\n            headers: Config.ApiRequest.request.headers\n          });\n          dispatch({\n            type: Config.ApiRequest.actionsTypes.INIT_MAIN,\n            data: {\n              user: {\n                name: res.data.user.name,\n                avatar: res.data.user.avatar,\n                favs: res.data.user.favs\n              },\n              contents: res.data.contents\n            }\n          });\n        } catch (e) {//console.log(e);\n        } finally {\n          return res.data.user;\n        }\n      };\n    },\n    Player: async params => {}\n  }\n};\nexport default ApiRequest;","map":{"version":3,"sources":["/Users/sergiogimenez/Documents/prueba/perseo-tv/src/services/api/Api-request.js"],"names":["axios","Config","ApiRequest","Session","Login","params","dispatch","res","post","request","baseURL","urls","LOGIN","headers","data","authorized","error","console","log","type","actionsTypes","token","e","Peine","Main","URLSearchParams","append","MAIN","INIT_MAIN","user","name","avatar","favs","contents","Player"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport Config from '../config/Config';\n\nconst ApiRequest = {\n  Session: {\n    Login: (params) => {\n      return async (dispatch) => {\n      let res = null;\n      try {\n        res = await axios.post(`${Config.ApiRequest.request.baseURL + Config.ApiRequest.urls.LOGIN}`, params, {\n          headers: Config.ApiRequest.request.headers\n        })\n\n        if(res.data.authorized && !res.data.error){\n          console.log('correcto');\n        }\n\n        dispatch({\n          type: Config.ApiRequest.actionsTypes.LOGIN,\n          data: {\n            token: res.data.token\n          }\n        });\n        \n      } catch (e) {\n        console.log(e);\n      } finally {\n        console.log(res);\n      }\n    }\n    }\n  },\n  Peine: {\n    Main: () => {\n      return async (dispatch) => {\n        const params = new URLSearchParams();\n        params.append(\"token\", \"74698f97674df362f772ebf1339fca75\");\n        params.append(\"device\", \"Web\");\n        let res = null;\n        try {\n          res = await axios.post(`${Config.ApiRequest.request.baseURL + Config.ApiRequest.urls.MAIN}`, params, {\n            headers: Config.ApiRequest.request.headers\n          })\n          dispatch({\n            type: Config.ApiRequest.actionsTypes.INIT_MAIN,\n            data: {\n              user: {\n                name: res.data.user.name,\n                avatar: res.data.user.avatar,\n                favs: res.data.user.favs\n              },\n              contents: res.data.contents\n            }\n          });\n\n        } catch (e) {\n          //console.log(e);\n        } finally {\n          return res.data.user;\n        }\n      }\n    },\n    Player: async (params) => {\n\n    }\n  }\n}\n\nexport default ApiRequest;"]},"metadata":{},"sourceType":"module"}