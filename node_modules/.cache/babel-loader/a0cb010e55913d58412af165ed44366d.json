{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sergiogimenez/Documents/prueba/perseo-tv/src/components/main/Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport ApiRequest from '../../services/api/Api-request';\nimport { Loading } from '../Loading/Loading';\nimport { VideoCard } from '../video/VideoCard';\nimport './Main.css';\n\nconst Main = props => {\n  _s();\n\n  const [videoDataSearch, setVideoDataSearch] = useState([]);\n  const [search, setSearch] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const params = new URLSearchParams();\n    params.append(\"token\", props.state.token);\n    params.append(\"device\", \"Web\");\n    props.main(params);\n  }, []);\n\n  const handleSearch = event => {\n    setSearch(event.target.value);\n    console.log(event.target.value);\n    setLoading(true);\n    let contentSearch = [];\n\n    if (search.length >= 2) {\n      props.state.contents.map(content => {\n        let newContent = {};\n\n        if (content.title.includes(search)) {\n          newContent = { ...content\n          };\n          contentSearch.push(newContent);\n        }\n      });\n    } else {\n      contentSearch = [];\n    }\n\n    setVideoDataSearch(contentSearch);\n    setLoading(false);\n    console.log(search);\n  };\n\n  const changeFav = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search...\",\n          value: search,\n          onChange: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: [videoDataSearch.length > 0 ? videoDataSearch.map(content => /*#__PURE__*/_jsxDEV(VideoCard, {\n        videoData: content\n      }, content.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this)) : props.state.contents.map(content => /*#__PURE__*/_jsxDEV(VideoCard, {\n        videoData: content\n      }, content.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this)), props.state.loading || loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"3E2x9AJntkdALnIfV+3Hcf8in2g=\");\n\n_c = Main;\n\nconst mapStateToProps = state => ({\n  state: state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  main: params => {\n    ApiRequest.App.Main(params)(dispatch);\n  }\n});\n\nconst connectedMain = connect(mapStateToProps, mapDispatchToProps)(Main);\nexport default connectedMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/sergiogimenez/Documents/prueba/perseo-tv/src/components/main/Main.jsx"],"names":["React","useEffect","useState","connect","ApiRequest","Loading","VideoCard","Main","props","videoDataSearch","setVideoDataSearch","search","setSearch","loading","setLoading","params","URLSearchParams","append","state","token","main","handleSearch","event","target","value","console","log","contentSearch","length","contents","map","content","newContent","title","includes","push","changeFav","id","mapStateToProps","mapDispatchToProps","dispatch","App","connectedMain"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport ApiRequest from '../../services/api/Api-request';\nimport { Loading } from '../Loading/Loading';\nimport { VideoCard } from '../video/VideoCard';\nimport './Main.css';\n\nconst Main = (props) => {\n\n    const [videoDataSearch, setVideoDataSearch] = useState([]);\n    const [search, setSearch] = useState('')\n    const [loading, setLoading] = useState(false)\n\n    useEffect(() => {\n        const params = new URLSearchParams();\n        params.append(\"token\", props.state.token);\n        params.append(\"device\", \"Web\");\n        props.main(params);\n    }, [])\n\n    const handleSearch = (event) => {\n        setSearch(event.target.value);\n        console.log(event.target.value)\n        setLoading(true);\n        let contentSearch = [];\n        if (search.length >= 2) {\n            props.state.contents.map(content => {\n                let newContent = {};\n                if (content.title.includes(search)) {\n                    newContent = {\n                        ...content\n                    }\n                    contentSearch.push(newContent)\n                }\n            })\n        } else {\n            contentSearch = [];\n        }\n        setVideoDataSearch(contentSearch);\n        setLoading(false);\n        console.log(search)\n    }\n\n    const changeFav = () => {\n\n    }\n\n    return (\n\n        <div>\n            <header className=\"header\">\n                <div className=\"search\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Search...\"\n                        value={search}\n                        onChange={handleSearch} />\n                </div>\n            </header>\n            <div className=\"card-grid\">\n                {videoDataSearch.length > 0 ?\n                    videoDataSearch.map(content => (\n                        <VideoCard key={content.id} videoData={content} />\n                    ))\n                    :\n                    props.state.contents.map(content => (\n                        <VideoCard key={content.id} videoData={content} />\n                    ))\n                }\n\n                {props.state.loading || loading &&\n                    <Loading />\n                }\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({ state: state });\n\nconst mapDispatchToProps = (dispatch) => ({\n    main: (params) => {\n        ApiRequest.App.Main(params)(dispatch);\n    }\n});\n\nconst connectedMain = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Main);\n\nexport default connectedMain;\n\n"]},"metadata":{},"sourceType":"module"}