{"ast":null,"code":"import Config from \"../config/Config\";\nconst initialState = {\n  user: {},\n  contents: [],\n  login: {},\n  token: '',\n  loading: false\n};\n\nfunction reducer(state = initialState, {\n  type,\n  data\n}) {\n  switch (type) {\n    case Config.ApiRequest.actionsTypes.LOGIN:\n      return { ...state,\n        token: data.token,\n        loading: false\n      };\n\n    case Config.ApiRequest.actionsTypes.LOGIN_ERROR:\n      return { ...state,\n        login: data,\n        loading: false\n      };\n\n    case Config.ApiRequest.actionsTypes.INIT_MAIN:\n      return { ...state,\n        contents: data.contents,\n        user: data.user,\n        loading: false\n      };\n\n    case Config.ApiRequest.actionsTypes.LOADING:\n      return { ...state,\n        loading: data.loading\n      };\n\n    case Config.ApiRequest.actionsTypes.FAVORITE:\n      let newState = changeFavorite(data, state);\n      return {};\n\n    default:\n      return state;\n  }\n}\n\nfunction changeFavorite(params, state) {\n  /*state.data.contents.map(content => {\n      let newContent = {};\n      if (!res.data.user.favs.indexOf(content.id)) {\n        console.log(content.id)\n        newContent = {\n          ...content,\n          fav: true\n        }\n      } else {\n        newContent = {\n          ...content,\n          fav: false\n        }\n      }\n      contentsFavs.push(newContent)\n    })*/\n  console.log('params change');\n  console.log(params);\n  console.log('state change');\n  console.log(state);\n}\n\nexport default reducer;","map":{"version":3,"sources":["/Users/sergiogimenez/Documents/prueba/perseo-tv/src/services/redux/reducer.js"],"names":["Config","initialState","user","contents","login","token","loading","reducer","state","type","data","ApiRequest","actionsTypes","LOGIN","LOGIN_ERROR","INIT_MAIN","LOADING","FAVORITE","newState","changeFavorite","params","console","log"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,kBAAnB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,KAAK,EAAE,EAHU;AAIjBC,EAAAA,KAAK,EAAE,EAJU;AAKjBC,EAAAA,OAAO,EAAE;AALQ,CAArB;;AAQA,SAASC,OAAT,CAAiBC,KAAK,GAAGP,YAAzB,EAAuC;AAACQ,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAvC,EAAqD;AACjD,UAAQD,IAAR;AACI,SAAKT,MAAM,CAACW,UAAP,CAAkBC,YAAlB,CAA+BC,KAApC;AACI,aAAO,EACH,GAAGL,KADA;AAEHH,QAAAA,KAAK,EAAEK,IAAI,CAACL,KAFT;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKN,MAAM,CAACW,UAAP,CAAkBC,YAAlB,CAA+BE,WAApC;AACI,aAAO,EACH,GAAGN,KADA;AAEHJ,QAAAA,KAAK,EAAEM,IAFJ;AAGHJ,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKN,MAAM,CAACW,UAAP,CAAkBC,YAAlB,CAA+BG,SAApC;AACI,aAAO,EACH,GAAGP,KADA;AAEHL,QAAAA,QAAQ,EAAEO,IAAI,CAACP,QAFZ;AAGHD,QAAAA,IAAI,EAAEQ,IAAI,CAACR,IAHR;AAIHI,QAAAA,OAAO,EAAE;AAJN,OAAP;;AAMJ,SAAKN,MAAM,CAACW,UAAP,CAAkBC,YAAlB,CAA+BI,OAApC;AACI,aAAO,EACH,GAAGR,KADA;AAEHF,QAAAA,OAAO,EAAEI,IAAI,CAACJ;AAFX,OAAP;;AAIJ,SAAKN,MAAM,CAACW,UAAP,CAAkBC,YAAlB,CAA+BK,QAApC;AACI,UAAIC,QAAQ,GAAGC,cAAc,CAACT,IAAD,EAAOF,KAAP,CAA7B;AACA,aAAO,EAAP;;AAGJ;AACI,aAAOA,KAAP;AA/BR;AAiCH;;AAED,SAASW,cAAT,CAAwBC,MAAxB,EAAgCZ,KAAhC,EAAsC;AAClC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMa,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACL;;AAED,eAAeD,OAAf","sourcesContent":["import Config from \"../config/Config\";\n\nconst initialState = {\n    user: {},\n    contents: [],\n    login: {},\n    token: '',\n    loading: false\n};\n\nfunction reducer(state = initialState, {type, data}) {\n    switch (type) {\n        case Config.ApiRequest.actionsTypes.LOGIN:           \n            return {\n                ...state,\n                token: data.token,\n                loading: false,\n            };\n        case Config.ApiRequest.actionsTypes.LOGIN_ERROR:           \n            return {\n                ...state,\n                login: data,\n                loading: false,\n            };\n        case Config.ApiRequest.actionsTypes.INIT_MAIN:\n            return {\n                ...state,\n                contents: data.contents,\n                user: data.user,\n                loading: false,\n            };\n        case Config.ApiRequest.actionsTypes.LOADING:\n            return {\n                ...state,\n                loading: data.loading\n            };\n        case Config.ApiRequest.actionsTypes.FAVORITE:\n            let newState = changeFavorite(data, state)\n            return {\n               \n            };\n        default:\n            return state;\n    }\n}\n\nfunction changeFavorite(params, state){\n    /*state.data.contents.map(content => {\n        let newContent = {};\n        if (!res.data.user.favs.indexOf(content.id)) {\n          console.log(content.id)\n          newContent = {\n            ...content,\n            fav: true\n          }\n        } else {\n          newContent = {\n            ...content,\n            fav: false\n          }\n        }\n        contentsFavs.push(newContent)\n      })*/\n      console.log('params change')\n      console.log(params)\n      console.log('state change')\n      console.log(state)\n}\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}